#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLLuongSanPham.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLLuongSP")]
	public partial class QLLuongSPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBangCongHC(BangCongHC instance);
    partial void UpdateBangCongHC(BangCongHC instance);
    partial void DeleteBangCongHC(BangCongHC instance);
    partial void InsertTrinhDoHocVan(TrinhDoHocVan instance);
    partial void UpdateTrinhDoHocVan(TrinhDoHocVan instance);
    partial void DeleteTrinhDoHocVan(TrinhDoHocVan instance);
    partial void InsertBangCongSP(BangCongSP instance);
    partial void UpdateBangCongSP(BangCongSP instance);
    partial void DeleteBangCongSP(BangCongSP instance);
    partial void InsertBangLuong(BangLuong instance);
    partial void UpdateBangLuong(BangLuong instance);
    partial void DeleteBangLuong(BangLuong instance);
    partial void InsertCaLam(CaLam instance);
    partial void UpdateCaLam(CaLam instance);
    partial void DeleteCaLam(CaLam instance);
    partial void InsertCongDoan(CongDoan instance);
    partial void UpdateCongDoan(CongDoan instance);
    partial void DeleteCongDoan(CongDoan instance);
    partial void InsertCT_BangCongSP(CT_BangCongSP instance);
    partial void UpdateCT_BangCongSP(CT_BangCongSP instance);
    partial void DeleteCT_BangCongSP(CT_BangCongSP instance);
    partial void InsertChiTietHopDong(ChiTietHopDong instance);
    partial void UpdateChiTietHopDong(ChiTietHopDong instance);
    partial void DeleteChiTietHopDong(ChiTietHopDong instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertHopDong(HopDong instance);
    partial void UpdateHopDong(HopDong instance);
    partial void DeleteHopDong(HopDong instance);
    partial void InsertLoaiPhep(LoaiPhep instance);
    partial void UpdateLoaiPhep(LoaiPhep instance);
    partial void DeleteLoaiPhep(LoaiPhep instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public QLLuongSPDataContext() : 
				base(global::QLLuongSanPham.Properties.Settings.Default.QLLuongSPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLLuongSPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLuongSPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLuongSPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLuongSPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangCongHC> BangCongHCs
		{
			get
			{
				return this.GetTable<BangCongHC>();
			}
		}
		
		public System.Data.Linq.Table<TrinhDoHocVan> TrinhDoHocVans
		{
			get
			{
				return this.GetTable<TrinhDoHocVan>();
			}
		}
		
		public System.Data.Linq.Table<BangCongSP> BangCongSPs
		{
			get
			{
				return this.GetTable<BangCongSP>();
			}
		}
		
		public System.Data.Linq.Table<BangLuong> BangLuongs
		{
			get
			{
				return this.GetTable<BangLuong>();
			}
		}
		
		public System.Data.Linq.Table<CaLam> CaLams
		{
			get
			{
				return this.GetTable<CaLam>();
			}
		}
		
		public System.Data.Linq.Table<CongDoan> CongDoans
		{
			get
			{
				return this.GetTable<CongDoan>();
			}
		}
		
		public System.Data.Linq.Table<CT_BangCongSP> CT_BangCongSPs
		{
			get
			{
				return this.GetTable<CT_BangCongSP>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this.GetTable<ChiTietHopDong>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<HopDong> HopDongs
		{
			get
			{
				return this.GetTable<HopDong>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhep> LoaiPheps
		{
			get
			{
				return this.GetTable<LoaiPhep>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangCongHC")]
	public partial class BangCongHC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _NgayCham;
		
		private System.Nullable<int> _IDNhanVien;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _IDLoaiPhep;
		
		private EntityRef<LoaiPhep> _LoaiPhep;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNgayChamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChamChanged();
    partial void OnIDNhanVienChanging(System.Nullable<int> value);
    partial void OnIDNhanVienChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnIDLoaiPhepChanging(System.Nullable<int> value);
    partial void OnIDLoaiPhepChanged();
    #endregion
		
		public BangCongHC()
		{
			this._LoaiPhep = default(EntityRef<LoaiPhep>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCham", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCham
		{
			get
			{
				return this._NgayCham;
			}
			set
			{
				if ((this._NgayCham != value))
				{
					this.OnNgayChamChanging(value);
					this.SendPropertyChanging();
					this._NgayCham = value;
					this.SendPropertyChanged("NgayCham");
					this.OnNgayChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int")]
		public System.Nullable<int> IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiPhep", DbType="Int")]
		public System.Nullable<int> IDLoaiPhep
		{
			get
			{
				return this._IDLoaiPhep;
			}
			set
			{
				if ((this._IDLoaiPhep != value))
				{
					if (this._LoaiPhep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiPhepChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiPhep = value;
					this.SendPropertyChanged("IDLoaiPhep");
					this.OnIDLoaiPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhep_BangCongHC", Storage="_LoaiPhep", ThisKey="IDLoaiPhep", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public LoaiPhep LoaiPhep
		{
			get
			{
				return this._LoaiPhep.Entity;
			}
			set
			{
				LoaiPhep previousValue = this._LoaiPhep.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhep.Entity = null;
						previousValue.BangCongHCs.Remove(this);
					}
					this._LoaiPhep.Entity = value;
					if ((value != null))
					{
						value.BangCongHCs.Add(this);
						this._IDLoaiPhep = value.ID;
					}
					else
					{
						this._IDLoaiPhep = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangCongHC", Storage="_NhanVien", ThisKey="IDNhanVien", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.BangCongHCs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.BangCongHCs.Add(this);
						this._IDNhanVien = value.ID;
					}
					else
					{
						this._IDNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrinhDoHocVan")]
	public partial class TrinhDoHocVan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenTrinhDo;
		
		private System.Nullable<double> _ChiSoLuongCongThem;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenTrinhDoChanging(string value);
    partial void OnTenTrinhDoChanged();
    partial void OnChiSoLuongCongThemChanging(System.Nullable<double> value);
    partial void OnChiSoLuongCongThemChanged();
    #endregion
		
		public TrinhDoHocVan()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrinhDo", DbType="NVarChar(120)")]
		public string TenTrinhDo
		{
			get
			{
				return this._TenTrinhDo;
			}
			set
			{
				if ((this._TenTrinhDo != value))
				{
					this.OnTenTrinhDoChanging(value);
					this.SendPropertyChanging();
					this._TenTrinhDo = value;
					this.SendPropertyChanged("TenTrinhDo");
					this.OnTenTrinhDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiSoLuongCongThem", DbType="Float")]
		public System.Nullable<double> ChiSoLuongCongThem
		{
			get
			{
				return this._ChiSoLuongCongThem;
			}
			set
			{
				if ((this._ChiSoLuongCongThem != value))
				{
					this.OnChiSoLuongCongThemChanging(value);
					this.SendPropertyChanging();
					this._ChiSoLuongCongThem = value;
					this.SendPropertyChanged("ChiSoLuongCongThem");
					this.OnChiSoLuongCongThemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrinhDoHocVan_NhanVien", Storage="_NhanViens", ThisKey="ID", OtherKey="IDTrinhDoHocVan")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.TrinhDoHocVan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.TrinhDoHocVan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangCongSP")]
	public partial class BangCongSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDCongDoan;
		
		private System.Nullable<int> _IDCaLam;
		
		private System.Nullable<int> _SoLuongNguoi;
		
		private EntitySet<CT_BangCongSP> _CT_BangCongSPs;
		
		private EntityRef<CaLam> _CaLam;
		
		private EntityRef<CongDoan> _CongDoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDCongDoanChanging(System.Nullable<int> value);
    partial void OnIDCongDoanChanged();
    partial void OnIDCaLamChanging(System.Nullable<int> value);
    partial void OnIDCaLamChanged();
    partial void OnSoLuongNguoiChanging(System.Nullable<int> value);
    partial void OnSoLuongNguoiChanged();
    #endregion
		
		public BangCongSP()
		{
			this._CT_BangCongSPs = new EntitySet<CT_BangCongSP>(new Action<CT_BangCongSP>(this.attach_CT_BangCongSPs), new Action<CT_BangCongSP>(this.detach_CT_BangCongSPs));
			this._CaLam = default(EntityRef<CaLam>);
			this._CongDoan = default(EntityRef<CongDoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCongDoan", DbType="Int")]
		public System.Nullable<int> IDCongDoan
		{
			get
			{
				return this._IDCongDoan;
			}
			set
			{
				if ((this._IDCongDoan != value))
				{
					if (this._CongDoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCongDoanChanging(value);
					this.SendPropertyChanging();
					this._IDCongDoan = value;
					this.SendPropertyChanged("IDCongDoan");
					this.OnIDCongDoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCaLam", DbType="Int")]
		public System.Nullable<int> IDCaLam
		{
			get
			{
				return this._IDCaLam;
			}
			set
			{
				if ((this._IDCaLam != value))
				{
					if (this._CaLam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCaLamChanging(value);
					this.SendPropertyChanging();
					this._IDCaLam = value;
					this.SendPropertyChanged("IDCaLam");
					this.OnIDCaLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNguoi", DbType="Int")]
		public System.Nullable<int> SoLuongNguoi
		{
			get
			{
				return this._SoLuongNguoi;
			}
			set
			{
				if ((this._SoLuongNguoi != value))
				{
					this.OnSoLuongNguoiChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNguoi = value;
					this.SendPropertyChanged("SoLuongNguoi");
					this.OnSoLuongNguoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangCongSP_CT_BangCongSP", Storage="_CT_BangCongSPs", ThisKey="ID", OtherKey="ID_BCSP")]
		public EntitySet<CT_BangCongSP> CT_BangCongSPs
		{
			get
			{
				return this._CT_BangCongSPs;
			}
			set
			{
				this._CT_BangCongSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaLam_BangCongSP", Storage="_CaLam", ThisKey="IDCaLam", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public CaLam CaLam
		{
			get
			{
				return this._CaLam.Entity;
			}
			set
			{
				CaLam previousValue = this._CaLam.Entity;
				if (((previousValue != value) 
							|| (this._CaLam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CaLam.Entity = null;
						previousValue.BangCongSPs.Remove(this);
					}
					this._CaLam.Entity = value;
					if ((value != null))
					{
						value.BangCongSPs.Add(this);
						this._IDCaLam = value.ID;
					}
					else
					{
						this._IDCaLam = default(Nullable<int>);
					}
					this.SendPropertyChanged("CaLam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongDoan_BangCongSP", Storage="_CongDoan", ThisKey="IDCongDoan", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public CongDoan CongDoan
		{
			get
			{
				return this._CongDoan.Entity;
			}
			set
			{
				CongDoan previousValue = this._CongDoan.Entity;
				if (((previousValue != value) 
							|| (this._CongDoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongDoan.Entity = null;
						previousValue.BangCongSPs.Remove(this);
					}
					this._CongDoan.Entity = value;
					if ((value != null))
					{
						value.BangCongSPs.Add(this);
						this._IDCongDoan = value.ID;
					}
					else
					{
						this._IDCongDoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("CongDoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_BangCongSPs(CT_BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.BangCongSP = this;
		}
		
		private void detach_CT_BangCongSPs(CT_BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.BangCongSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangLuong")]
	public partial class BangLuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<decimal> _TienLuong;
		
		private System.Nullable<int> _IDNhanVien;
		
		private System.Nullable<int> _SoBuoiLamThem;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnTienLuongChanging(System.Nullable<decimal> value);
    partial void OnTienLuongChanged();
    partial void OnIDNhanVienChanging(System.Nullable<int> value);
    partial void OnIDNhanVienChanged();
    partial void OnSoBuoiLamThemChanging(System.Nullable<int> value);
    partial void OnSoBuoiLamThemChanged();
    #endregion
		
		public BangLuong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienLuong", DbType="Money")]
		public System.Nullable<decimal> TienLuong
		{
			get
			{
				return this._TienLuong;
			}
			set
			{
				if ((this._TienLuong != value))
				{
					this.OnTienLuongChanging(value);
					this.SendPropertyChanging();
					this._TienLuong = value;
					this.SendPropertyChanged("TienLuong");
					this.OnTienLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int")]
		public System.Nullable<int> IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBuoiLamThem", DbType="Int")]
		public System.Nullable<int> SoBuoiLamThem
		{
			get
			{
				return this._SoBuoiLamThem;
			}
			set
			{
				if ((this._SoBuoiLamThem != value))
				{
					this.OnSoBuoiLamThemChanging(value);
					this.SendPropertyChanging();
					this._SoBuoiLamThem = value;
					this.SendPropertyChanged("SoBuoiLamThem");
					this.OnSoBuoiLamThemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangLuong", Storage="_NhanVien", ThisKey="IDNhanVien", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.BangLuongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.BangLuongs.Add(this);
						this._IDNhanVien = value.ID;
					}
					else
					{
						this._IDNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaLam")]
	public partial class CaLam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenCa;
		
		private string _ThoiGianLam;
		
		private EntitySet<BangCongSP> _BangCongSPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenCaChanging(string value);
    partial void OnTenCaChanged();
    partial void OnThoiGianLamChanging(string value);
    partial void OnThoiGianLamChanged();
    #endregion
		
		public CaLam()
		{
			this._BangCongSPs = new EntitySet<BangCongSP>(new Action<BangCongSP>(this.attach_BangCongSPs), new Action<BangCongSP>(this.detach_BangCongSPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCa", DbType="NVarChar(120)")]
		public string TenCa
		{
			get
			{
				return this._TenCa;
			}
			set
			{
				if ((this._TenCa != value))
				{
					this.OnTenCaChanging(value);
					this.SendPropertyChanging();
					this._TenCa = value;
					this.SendPropertyChanged("TenCa");
					this.OnTenCaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianLam", DbType="NVarChar(150)")]
		public string ThoiGianLam
		{
			get
			{
				return this._ThoiGianLam;
			}
			set
			{
				if ((this._ThoiGianLam != value))
				{
					this.OnThoiGianLamChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianLam = value;
					this.SendPropertyChanged("ThoiGianLam");
					this.OnThoiGianLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaLam_BangCongSP", Storage="_BangCongSPs", ThisKey="ID", OtherKey="IDCaLam")]
		public EntitySet<BangCongSP> BangCongSPs
		{
			get
			{
				return this._BangCongSPs;
			}
			set
			{
				this._BangCongSPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangCongSPs(BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.CaLam = this;
		}
		
		private void detach_BangCongSPs(BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.CaLam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongDoan")]
	public partial class CongDoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenCongDoan;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<int> _IDSanPham;
		
		private EntitySet<BangCongSP> _BangCongSPs;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenCongDoanChanging(string value);
    partial void OnTenCongDoanChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnIDSanPhamChanging(System.Nullable<int> value);
    partial void OnIDSanPhamChanged();
    #endregion
		
		public CongDoan()
		{
			this._BangCongSPs = new EntitySet<BangCongSP>(new Action<BangCongSP>(this.attach_BangCongSPs), new Action<BangCongSP>(this.detach_BangCongSPs));
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCongDoan", DbType="NVarChar(120)")]
		public string TenCongDoan
		{
			get
			{
				return this._TenCongDoan;
			}
			set
			{
				if ((this._TenCongDoan != value))
				{
					this.OnTenCongDoanChanging(value);
					this.SendPropertyChanging();
					this._TenCongDoan = value;
					this.SendPropertyChanged("TenCongDoan");
					this.OnTenCongDoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int")]
		public System.Nullable<int> IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongDoan_BangCongSP", Storage="_BangCongSPs", ThisKey="ID", OtherKey="IDCongDoan")]
		public EntitySet<BangCongSP> BangCongSPs
		{
			get
			{
				return this._BangCongSPs;
			}
			set
			{
				this._BangCongSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CongDoan", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CongDoans.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CongDoans.Add(this);
						this._IDSanPham = value.ID;
					}
					else
					{
						this._IDSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangCongSPs(BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.CongDoan = this;
		}
		
		private void detach_BangCongSPs(BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.CongDoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_BangCongSP")]
	public partial class CT_BangCongSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NV;
		
		private int _ID_BCSP;
		
		private System.Nullable<int> _SoLuongSP;
		
		private EntityRef<BangCongSP> _BangCongSP;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnID_BCSPChanging(int value);
    partial void OnID_BCSPChanged();
    partial void OnSoLuongSPChanging(System.Nullable<int> value);
    partial void OnSoLuongSPChanged();
    #endregion
		
		public CT_BangCongSP()
		{
			this._BangCongSP = default(EntityRef<BangCongSP>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BCSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_BCSP
		{
			get
			{
				return this._ID_BCSP;
			}
			set
			{
				if ((this._ID_BCSP != value))
				{
					if (this._BangCongSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BCSPChanging(value);
					this.SendPropertyChanging();
					this._ID_BCSP = value;
					this.SendPropertyChanged("ID_BCSP");
					this.OnID_BCSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSP", DbType="Int")]
		public System.Nullable<int> SoLuongSP
		{
			get
			{
				return this._SoLuongSP;
			}
			set
			{
				if ((this._SoLuongSP != value))
				{
					this.OnSoLuongSPChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSP = value;
					this.SendPropertyChanged("SoLuongSP");
					this.OnSoLuongSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangCongSP_CT_BangCongSP", Storage="_BangCongSP", ThisKey="ID_BCSP", OtherKey="ID", IsForeignKey=true)]
		public BangCongSP BangCongSP
		{
			get
			{
				return this._BangCongSP.Entity;
			}
			set
			{
				BangCongSP previousValue = this._BangCongSP.Entity;
				if (((previousValue != value) 
							|| (this._BangCongSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BangCongSP.Entity = null;
						previousValue.CT_BangCongSPs.Remove(this);
					}
					this._BangCongSP.Entity = value;
					if ((value != null))
					{
						value.CT_BangCongSPs.Add(this);
						this._ID_BCSP = value.ID;
					}
					else
					{
						this._ID_BCSP = default(int);
					}
					this.SendPropertyChanged("BangCongSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CT_BangCongSP", Storage="_NhanVien", ThisKey="ID_NV", OtherKey="ID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.CT_BangCongSPs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.CT_BangCongSPs.Add(this);
						this._ID_NV = value.ID;
					}
					else
					{
						this._ID_NV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHopDong")]
	public partial class ChiTietHopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSanPham;
		
		private int _IDHopDong;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<HopDong> _HopDong;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSanPhamChanging(int value);
    partial void OnIDSanPhamChanged();
    partial void OnIDHopDongChanging(int value);
    partial void OnIDHopDongChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietHopDong()
		{
			this._HopDong = default(EntityRef<HopDong>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHopDong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHopDong
		{
			get
			{
				return this._IDHopDong;
			}
			set
			{
				if ((this._IDHopDong != value))
				{
					if (this._HopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHopDongChanging(value);
					this.SendPropertyChanging();
					this._IDHopDong = value;
					this.SendPropertyChanged("IDHopDong");
					this.OnIDHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_ChiTietHopDong", Storage="_HopDong", ThisKey="IDHopDong", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HopDong HopDong
		{
			get
			{
				return this._HopDong.Entity;
			}
			set
			{
				HopDong previousValue = this._HopDong.Entity;
				if (((previousValue != value) 
							|| (this._HopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HopDong.Entity = null;
						previousValue.ChiTietHopDongs.Remove(this);
					}
					this._HopDong.Entity = value;
					if ((value != null))
					{
						value.ChiTietHopDongs.Add(this);
						this._IDHopDong = value.ID;
					}
					else
					{
						this._IDHopDong = default(int);
					}
					this.SendPropertyChanged("HopDong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHopDong", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHopDongs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHopDongs.Add(this);
						this._IDSanPham = value.ID;
					}
					else
					{
						this._IDSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenChucVu;
		
		private System.Nullable<decimal> _PhuCap;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    partial void OnPhuCapChanging(System.Nullable<decimal> value);
    partial void OnPhuCapChanged();
    #endregion
		
		public ChucVu()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucVu", DbType="NVarChar(120)")]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_NhanViens", ThisKey="ID", OtherKey="IDChucVu")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HopDong")]
	public partial class HopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenHopDong;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private string _TenKhachHang;
		
		private string _DieuKhoan;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietHopDong> _ChiTietHopDongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenHopDongChanging(string value);
    partial void OnTenHopDongChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnDieuKhoanChanging(string value);
    partial void OnDieuKhoanChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public HopDong()
		{
			this._ChiTietHopDongs = new EntitySet<ChiTietHopDong>(new Action<ChiTietHopDong>(this.attach_ChiTietHopDongs), new Action<ChiTietHopDong>(this.detach_ChiTietHopDongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHopDong", DbType="NVarChar(120)")]
		public string TenHopDong
		{
			get
			{
				return this._TenHopDong;
			}
			set
			{
				if ((this._TenHopDong != value))
				{
					this.OnTenHopDongChanging(value);
					this.SendPropertyChanging();
					this._TenHopDong = value;
					this.SendPropertyChanged("TenHopDong");
					this.OnTenHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(120)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieuKhoan", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DieuKhoan
		{
			get
			{
				return this._DieuKhoan;
			}
			set
			{
				if ((this._DieuKhoan != value))
				{
					this.OnDieuKhoanChanging(value);
					this.SendPropertyChanging();
					this._DieuKhoan = value;
					this.SendPropertyChanged("DieuKhoan");
					this.OnDieuKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_ChiTietHopDong", Storage="_ChiTietHopDongs", ThisKey="ID", OtherKey="IDHopDong")]
		public EntitySet<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this._ChiTietHopDongs;
			}
			set
			{
				this._ChiTietHopDongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = this;
		}
		
		private void detach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhep")]
	public partial class LoaiPhep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhep;
		
		private System.Nullable<decimal> _PhuCap;
		
		private EntitySet<BangCongHC> _BangCongHCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhepChanging(string value);
    partial void OnTenPhepChanged();
    partial void OnPhuCapChanging(System.Nullable<decimal> value);
    partial void OnPhuCapChanged();
    #endregion
		
		public LoaiPhep()
		{
			this._BangCongHCs = new EntitySet<BangCongHC>(new Action<BangCongHC>(this.attach_BangCongHCs), new Action<BangCongHC>(this.detach_BangCongHCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhep", DbType="NVarChar(150)")]
		public string TenPhep
		{
			get
			{
				return this._TenPhep;
			}
			set
			{
				if ((this._TenPhep != value))
				{
					this.OnTenPhepChanging(value);
					this.SendPropertyChanging();
					this._TenPhep = value;
					this.SendPropertyChanged("TenPhep");
					this.OnTenPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhep_BangCongHC", Storage="_BangCongHCs", ThisKey="ID", OtherKey="IDLoaiPhep")]
		public EntitySet<BangCongHC> BangCongHCs
		{
			get
			{
				return this._BangCongHCs;
			}
			set
			{
				this._BangCongHCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangCongHCs(BangCongHC entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhep = this;
		}
		
		private void detach_BangCongHCs(BangCongHC entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhep = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _CMND;
		
		private System.Nullable<int> _IDPhongBan;
		
		private System.Nullable<double> _ChiSoLuong;
		
		private System.Nullable<decimal> _LuongCanBan;
		
		private System.Nullable<double> _TrinhDoNgoaiNgu;
		
		private System.Nullable<int> _ThamNienCongTac;
		
		private System.Nullable<int> _IDChucVu;
		
		private System.Nullable<int> _IDTrinhDoHocVan;
		
		private string _Anh;
		
		private EntitySet<BangCongHC> _BangCongHCs;
		
		private EntitySet<BangLuong> _BangLuongs;
		
		private EntitySet<CT_BangCongSP> _CT_BangCongSPs;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<ChucVu> _ChucVu;
		
		private EntityRef<TrinhDoHocVan> _TrinhDoHocVan;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnIDPhongBanChanging(System.Nullable<int> value);
    partial void OnIDPhongBanChanged();
    partial void OnChiSoLuongChanging(System.Nullable<double> value);
    partial void OnChiSoLuongChanged();
    partial void OnLuongCanBanChanging(System.Nullable<decimal> value);
    partial void OnLuongCanBanChanged();
    partial void OnTrinhDoNgoaiNguChanging(System.Nullable<double> value);
    partial void OnTrinhDoNgoaiNguChanged();
    partial void OnThamNienCongTacChanging(System.Nullable<int> value);
    partial void OnThamNienCongTacChanged();
    partial void OnIDChucVuChanging(System.Nullable<int> value);
    partial void OnIDChucVuChanged();
    partial void OnIDTrinhDoHocVanChanging(System.Nullable<int> value);
    partial void OnIDTrinhDoHocVanChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    #endregion
		
		public NhanVien()
		{
			this._BangCongHCs = new EntitySet<BangCongHC>(new Action<BangCongHC>(this.attach_BangCongHCs), new Action<BangCongHC>(this.detach_BangCongHCs));
			this._BangLuongs = new EntitySet<BangLuong>(new Action<BangLuong>(this.attach_BangLuongs), new Action<BangLuong>(this.detach_BangLuongs));
			this._CT_BangCongSPs = new EntitySet<CT_BangCongSP>(new Action<CT_BangCongSP>(this.attach_CT_BangCongSPs), new Action<CT_BangCongSP>(this.detach_CT_BangCongSPs));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._ChucVu = default(EntityRef<ChucVu>);
			this._TrinhDoHocVan = default(EntityRef<TrinhDoHocVan>);
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(120)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(120)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhongBan", DbType="Int")]
		public System.Nullable<int> IDPhongBan
		{
			get
			{
				return this._IDPhongBan;
			}
			set
			{
				if ((this._IDPhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhongBanChanging(value);
					this.SendPropertyChanging();
					this._IDPhongBan = value;
					this.SendPropertyChanged("IDPhongBan");
					this.OnIDPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiSoLuong", DbType="Float")]
		public System.Nullable<double> ChiSoLuong
		{
			get
			{
				return this._ChiSoLuong;
			}
			set
			{
				if ((this._ChiSoLuong != value))
				{
					this.OnChiSoLuongChanging(value);
					this.SendPropertyChanging();
					this._ChiSoLuong = value;
					this.SendPropertyChanged("ChiSoLuong");
					this.OnChiSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCanBan", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LuongCanBan
		{
			get
			{
				return this._LuongCanBan;
			}
			set
			{
				if ((this._LuongCanBan != value))
				{
					this.OnLuongCanBanChanging(value);
					this.SendPropertyChanging();
					this._LuongCanBan = value;
					this.SendPropertyChanged("LuongCanBan");
					this.OnLuongCanBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrinhDoNgoaiNgu", DbType="Float")]
		public System.Nullable<double> TrinhDoNgoaiNgu
		{
			get
			{
				return this._TrinhDoNgoaiNgu;
			}
			set
			{
				if ((this._TrinhDoNgoaiNgu != value))
				{
					this.OnTrinhDoNgoaiNguChanging(value);
					this.SendPropertyChanging();
					this._TrinhDoNgoaiNgu = value;
					this.SendPropertyChanged("TrinhDoNgoaiNgu");
					this.OnTrinhDoNgoaiNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThamNienCongTac", DbType="Int")]
		public System.Nullable<int> ThamNienCongTac
		{
			get
			{
				return this._ThamNienCongTac;
			}
			set
			{
				if ((this._ThamNienCongTac != value))
				{
					this.OnThamNienCongTacChanging(value);
					this.SendPropertyChanging();
					this._ThamNienCongTac = value;
					this.SendPropertyChanged("ThamNienCongTac");
					this.OnThamNienCongTacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChucVu", DbType="Int")]
		public System.Nullable<int> IDChucVu
		{
			get
			{
				return this._IDChucVu;
			}
			set
			{
				if ((this._IDChucVu != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChucVuChanging(value);
					this.SendPropertyChanging();
					this._IDChucVu = value;
					this.SendPropertyChanged("IDChucVu");
					this.OnIDChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTrinhDoHocVan", DbType="Int")]
		public System.Nullable<int> IDTrinhDoHocVan
		{
			get
			{
				return this._IDTrinhDoHocVan;
			}
			set
			{
				if ((this._IDTrinhDoHocVan != value))
				{
					if (this._TrinhDoHocVan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTrinhDoHocVanChanging(value);
					this.SendPropertyChanging();
					this._IDTrinhDoHocVan = value;
					this.SendPropertyChanged("IDTrinhDoHocVan");
					this.OnIDTrinhDoHocVanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="VarChar(120)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangCongHC", Storage="_BangCongHCs", ThisKey="ID", OtherKey="IDNhanVien")]
		public EntitySet<BangCongHC> BangCongHCs
		{
			get
			{
				return this._BangCongHCs;
			}
			set
			{
				this._BangCongHCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_BangLuong", Storage="_BangLuongs", ThisKey="ID", OtherKey="IDNhanVien")]
		public EntitySet<BangLuong> BangLuongs
		{
			get
			{
				return this._BangLuongs;
			}
			set
			{
				this._BangLuongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CT_BangCongSP", Storage="_CT_BangCongSPs", ThisKey="ID", OtherKey="ID_NV")]
		public EntitySet<CT_BangCongSP> CT_BangCongSPs
		{
			get
			{
				return this._CT_BangCongSPs;
			}
			set
			{
				this._CT_BangCongSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="ID", OtherKey="IDNhanVien")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_ChucVu", ThisKey="IDChucVu", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IDChucVu = value.ID;
					}
					else
					{
						this._IDChucVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrinhDoHocVan_NhanVien", Storage="_TrinhDoHocVan", ThisKey="IDTrinhDoHocVan", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public TrinhDoHocVan TrinhDoHocVan
		{
			get
			{
				return this._TrinhDoHocVan.Entity;
			}
			set
			{
				TrinhDoHocVan previousValue = this._TrinhDoHocVan.Entity;
				if (((previousValue != value) 
							|| (this._TrinhDoHocVan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrinhDoHocVan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._TrinhDoHocVan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IDTrinhDoHocVan = value.ID;
					}
					else
					{
						this._IDTrinhDoHocVan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrinhDoHocVan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_PhongBan", ThisKey="IDPhongBan", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IDPhongBan = value.ID;
					}
					else
					{
						this._IDPhongBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangCongHCs(BangCongHC entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_BangCongHCs(BangCongHC entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_BangLuongs(BangLuong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_BangLuongs(BangLuong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_CT_BangCongSPs(CT_BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_CT_BangCongSPs(CT_BangCongSP entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhongBan;
		
		private System.Nullable<System.DateTime> _NgayThanhLap;
		
		private string _TenQuanLy;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhongBanChanging(string value);
    partial void OnTenPhongBanChanged();
    partial void OnNgayThanhLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhLapChanged();
    partial void OnTenQuanLyChanging(string value);
    partial void OnTenQuanLyChanged();
    #endregion
		
		public PhongBan()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhongBan", DbType="NVarChar(120)")]
		public string TenPhongBan
		{
			get
			{
				return this._TenPhongBan;
			}
			set
			{
				if ((this._TenPhongBan != value))
				{
					this.OnTenPhongBanChanging(value);
					this.SendPropertyChanging();
					this._TenPhongBan = value;
					this.SendPropertyChanged("TenPhongBan");
					this.OnTenPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThanhLap
		{
			get
			{
				return this._NgayThanhLap;
			}
			set
			{
				if ((this._NgayThanhLap != value))
				{
					this.OnNgayThanhLapChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhLap = value;
					this.SendPropertyChanged("NgayThanhLap");
					this.OnNgayThanhLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuanLy", DbType="NVarChar(120)")]
		public string TenQuanLy
		{
			get
			{
				return this._TenQuanLy;
			}
			set
			{
				if ((this._TenQuanLy != value))
				{
					this.OnTenQuanLyChanging(value);
					this.SendPropertyChanging();
					this._TenQuanLy = value;
					this.SendPropertyChanged("TenQuanLy");
					this.OnTenQuanLyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_NhanViens", ThisKey="ID", OtherKey="IDPhongBan")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenSP;
		
		private string _DonViTinh;
		
		private System.Nullable<decimal> _DonGia;
		
		private string _AnhSP;
		
		private EntitySet<CongDoan> _CongDoans;
		
		private EntitySet<ChiTietHopDong> _ChiTietHopDongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnAnhSPChanging(string value);
    partial void OnAnhSPChanged();
    #endregion
		
		public SanPham()
		{
			this._CongDoans = new EntitySet<CongDoan>(new Action<CongDoan>(this.attach_CongDoans), new Action<CongDoan>(this.detach_CongDoans));
			this._ChiTietHopDongs = new EntitySet<ChiTietHopDong>(new Action<ChiTietHopDong>(this.attach_ChiTietHopDongs), new Action<ChiTietHopDong>(this.detach_ChiTietHopDongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(120)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(20)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSP", DbType="VarChar(120)")]
		public string AnhSP
		{
			get
			{
				return this._AnhSP;
			}
			set
			{
				if ((this._AnhSP != value))
				{
					this.OnAnhSPChanging(value);
					this.SendPropertyChanging();
					this._AnhSP = value;
					this.SendPropertyChanged("AnhSP");
					this.OnAnhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CongDoan", Storage="_CongDoans", ThisKey="ID", OtherKey="IDSanPham")]
		public EntitySet<CongDoan> CongDoans
		{
			get
			{
				return this._CongDoans;
			}
			set
			{
				this._CongDoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHopDong", Storage="_ChiTietHopDongs", ThisKey="ID", OtherKey="IDSanPham")]
		public EntitySet<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this._ChiTietHopDongs;
			}
			set
			{
				this._ChiTietHopDongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CongDoans(CongDoan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CongDoans(CongDoan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _IDNhanVien;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIDNhanVienChanging(System.Nullable<int> value);
    partial void OnIDNhanVienChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int")]
		public System.Nullable<int> IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="IDNhanVien", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._IDNhanVien = value.ID;
					}
					else
					{
						this._IDNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
